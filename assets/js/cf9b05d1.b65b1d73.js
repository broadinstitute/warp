"use strict";(self.webpackChunkwebsite_2=self.webpackChunkwebsite_2||[]).push([[53],{5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>y});var i=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=i.createContext({}),s=function(e){var t=i.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return i.createElement(u.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=s(n),d=r,y=c["".concat(u,".").concat(d)]||c[d]||m[d]||a;return n?i.createElement(y,l(l({ref:t},p),{},{components:n})):i.createElement(y,l({ref:t},p))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[c]="string"==typeof e?e:r,l[1]=o;for(var s=2;s<a;s++)l[s]=n[s];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7130:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var i=n(8168),r=(n(6540),n(5680));const a={sidebar_position:2},l="WDL Task Runtime Style Guide Overview",o={unversionedId:"contribution/contribute_to_warp/wdl_task_runtime_style",id:"contribution/contribute_to_warp/wdl_task_runtime_style",title:"WDL Task Runtime Style Guide Overview",description:"This style guide provides formatting guidelines and best practices for the runtime block of a WDL workflow task. For more information about scripting in WDL, see the WDL 1.0 Specification.",source:"@site/docs/contribution/contribute_to_warp/wdl_task_runtime_style.md",sourceDirName:"contribution/contribute_to_warp",slug:"/contribution/contribute_to_warp/wdl_task_runtime_style",permalink:"/warp/docs/contribution/contribute_to_warp/wdl_task_runtime_style",draft:!1,editUrl:"https://github.com/broadinstitute/warp/edit/develop/website/docs/contribution/contribute_to_warp/wdl_task_runtime_style.md",tags:[],version:"current",lastUpdatedBy:"aawdeh",lastUpdatedAt:1746713075,formattedLastUpdatedAt:"May 8, 2025",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Changelog Style Guide Overview",permalink:"/warp/docs/contribution/contribute_to_warp/changelog_style"},next:{title:"Contributing to Existing Pipelines",permalink:"/warp/docs/contribution/contribute_to_warp/contribution-guidelines"}},u={},s=[{value:"Variables and suggested configurations",id:"variables-and-suggested-configurations",level:2},{value:"Example task input",id:"example-task-input",level:2},{value:"Example task runtime",id:"example-task-runtime",level:2}],p={toc:s},c="wrapper";function m(e){let{components:t,...n}=e;return(0,r.yg)(c,(0,i.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"wdl-task-runtime-style-guide-overview"},"WDL Task Runtime Style Guide Overview"),(0,r.yg)("p",null,"This style guide provides formatting guidelines and best practices for the runtime block of a WDL workflow task. For more information about scripting in WDL, see the ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/openwdl/wdl/blob/main/SPEC.md"},"WDL 1.0 Specification"),"."),(0,r.yg)("h2",{id:"variables-and-suggested-configurations"},"Variables and suggested configurations"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Disk",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Set in GiB"),(0,r.yg)("li",{parentName:"ul"},"Variable type is Int"),(0,r.yg)("li",{parentName:"ul"},"Use ",(0,r.yg)("inlineCode",{parentName:"li"},"local-disk")," and ",(0,r.yg)("inlineCode",{parentName:"li"},"HDD")),(0,r.yg)("li",{parentName:"ul"},"Default should be dynamically set based on task inputs"),(0,r.yg)("li",{parentName:"ul"},"Variable name should be ",(0,r.yg)("inlineCode",{parentName:"li"},"disk_size_gb")))),(0,r.yg)("li",{parentName:"ul"},"Memory",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Set in MiB"),(0,r.yg)("li",{parentName:"ul"},"Variable type is Int"),(0,r.yg)("li",{parentName:"ul"},"Default should be dynamically set based on task inputs"),(0,r.yg)("li",{parentName:"ul"},"Variable name should be ",(0,r.yg)("inlineCode",{parentName:"li"},"memory_mb")))),(0,r.yg)("li",{parentName:"ul"},"CPU",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Default set to 1"),(0,r.yg)("li",{parentName:"ul"},"Variable name should be ",(0,r.yg)("inlineCode",{parentName:"li"},"cpu")))),(0,r.yg)("li",{parentName:"ul"},"Docker",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Variable name should be ",(0,r.yg)("inlineCode",{parentName:"li"},"docker"))))),(0,r.yg)("h2",{id:"example-task-input"},"Example task input"),(0,r.yg)("p",null,"Include runtime variables in the task inputs. Always provide a default value. Separate runtime variables from task inputs with one blank line."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'    input {\n        File example_file\n\n        String docker = "us.gcr.io/path/to/docker"\n        Int cpu = 1\n        Int memory_mb = ceil(size(example_file, "MiB"))\n        Int disk_size_db = ceil(size(example_file, "GiB"))\n    }\n')),(0,r.yg)("h2",{id:"example-task-runtime"},"Example task runtime"),(0,r.yg)("p",null,"Runtime block should be positioned between the command and output blocks of the task."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'    runtime {\n        docker: docker\n        cpu: cpu\n        memory: "${memory_mb} MiB"\n        disks: "local-disk ${disk_size_gb} HDD"\n    }\n')))}m.isMDXComponent=!0}}]);