# snM3C v4.0.1 Methods

# Methods

Data preprocessing and preparing chromatin contact data for downstream analysis were performed using the snm3C v4.0.1 pipeline (RRID:SCR_025041). Briefly, cell-level FASTQ files were first demultiplexed using Cutadapt. This step sorted and filtered the raw sequencing reads based on random primer indices. Demultiplexing splits the FASTQ files into unmapped reads, paired-end reads, and uniquely aligned reads. Paired-end read alignment was performed using HISAT-3N with the `r1_left_cut`, `r1_right_cut`, `r2_left_cut`, and `r2_right_cut` parameters to remove adapter sequences and filter reads based on length thresholds. The reads were then mapped to the reference genome using HISAT-3N to output an aligned BAM file.

Reads were sorted and separated into unmapped, uniquely aligned, and multi-aligned read categories using the custom scripts `separate_unique_and_multi_align_reads()` and `split_hisat3n_unmapped_reads()` provided by the snm3c pipeline. These functions separate unmapped, uniquely aligned, multi-aligned reads from HISAT-3N BAM file, then split the unmapped reads FASTQ file by all possible enzyme cut sites and output new R1 and R2 FASTQ files; unmapped reads are stored in unmapped FASTQ files and unique and multi-aligned reads are stored in separate BAM files. For single-end read alignment, the snm3C pipeline used HISAT-3N to align previously unmapped reads. These were realigned to maximize unique mapping, generating a single aligned BAM file. The reads were then processed through the `remove_overlap_read_parts()` script to remove overlapping segments from single-end aligned reads. All mapped reads were merged and deduplicated using samtools and Picard to create a deduplicated BAM. Chromatin contacts were identified using the `call_chromatin_contacts()` function, defining contacts as read pairs within a 2,500 base pair threshold. After this, the [ALLCools tool] (https://lhqing.github.io/ALLCools/intro.html) was used to create ALLC files containing methylation site information. Finally, the pipeline generated summary output CSV and logs using the `snm3c_summary()` function containing key metrics for the pipeline, including trimming, mapping, deduplication, and chromatin contact statistics.

An example of the pipeline and its output is available on the Terra snm3C Featured Workspace (URL). Further details regarding tools, parameters, and references used in the pipeline are available in the YAP documentation (https://hq-1.gitbook.io/mc).
